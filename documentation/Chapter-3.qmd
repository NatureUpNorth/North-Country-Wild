# Upload and process images {#sec-Chapter3}

## Introduction

This chapter describes the workflow we use when coming back to the lab with SD cards from a recent game camera deployment. The script we use for processing these files is `upload_and_process_images.py` found in the PythonScripts directory of this repository. The script includes some subcommands that can do only select pieces of the workflow. Typically, however, you would use the subcommand `completely_process_images_from_sd_card` if you are trying to complete the whole workflow in one pass.

## The script and its subcommands

The script `upload_and_process_images.py` has the following possible subcommands:

```{r}
#| label: tbl-1
#| tbl-cap: upload_and_process_images.py subcommands
#| echo: false
#| warning: false

library(tidyverse)
library(here)
library(reactable)
library(reactablefmtr)

df <- read_csv(here("documentation/data/upload_and_process_subcommands.csv")) #read in table of subcommands

table_1 <- reactable(
  df[,2:3],
  columns = list(
    subcommand_name = colDef(name = "Subcommand name"), #assign first col name
    subcommand_purpose = colDef(name = "Subcommand purpose")), #assign second col name
  bordered = TRUE,
  striped = TRUE,
  highlight = TRUE
  ) #create table 1
table_1
```

## Normal Workflow

Under normal circumstances, when we have an SD card that we are ready to work with, we follow these steps:

1.  Create an empty directory in the appropriate `Raw` folder to receive the raw images. This folder will be named CXXX_SDXXX where XXX is the 3-digit camera number and SD card number, respectively, including leading zeroes.

2.  Create an empty directory in the appropriate `Processed` folder to receive the processed images. This folder will be named CXXX_SDXXX where XXX is the 3-digit camera number and SD card number, respectively, including leading zeroes. You can simply copy the empty folder from the `Raw` directory and paste it in the `Processed` directory since both are empty.

3.  Open a terminal window. CD into the PythonScripts folder of this repository.

4.  We use the `upload_and_process_images.py` script under normal conditions, coupled with the `completely_process_images_from_sd_card` subcommand. The arguments you will need to provide are shown in @tbl-2.

| argument | explanation |
|------------------------------------|------------------------------------|
| `--memory-card-path` | provide (drag to terminal) the path to the SD card directory of images |
| `--path-to-raw-images` | provide(drag to terminal) the path to the empty directory you created in Step 1 above. |
| `--path-to-processed-images` | provide(drag to terminal) the path to the empty directory you created in Step 2 above. |
| `--camera-number` | provide the camera number. If you fail to give the 3-digit number, the script will add it. |
| `--sd-card-number` | provide the sd card number. If you fail to give the 3-digit number, the script will add it. |
| `--path-to-uploaded-file` | provide the path to a file called `files_uploaded_to_s3.txt`, which is located in the `misc_files` directory one level up from the `PythonScripts` directory in this repository. |
| `--bucket-name` | provide the name for the s3 "bucket" on AWS to which the images will be uploaded. Generally, this argument should be `north-country-wild-images` |

: Arguments required by completely_process_images_from_sd_card subcommand {#tbl-2}

5.  For us to keep track of the files we are pushing up to s3, we begin this process by creating and switching to a new branch in the project directory. Generally, we use a branch name such as DD-MON-YYYY-AWS-upload to make clear what we are doing. For example:

`git checkout -b 14-Aug-2025-AWS-upload`

6.  Run the code in the terminal by stringing together the following lines code, all as one continuous command in the terminal, but replace each case of FILEPATH with the requested path:

`python3 upload_and_process_images.py completely_process_images_from_sd_card --memory-card-path PATH-TO-MEMORY-CARD —path-to-raw-images FILEPATH —path-to-processed-images FILEPATH —camera-number CAMERA-NUMBER —sd-card-number SD-CARD-NUMBER —path-to-uploaded-file FILEPATH —bucket-name BUCKET-NAME`
